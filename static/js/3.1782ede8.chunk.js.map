{"version":3,"sources":["Card.js"],"names":["useStyles","makeStyles","theme","cardContent","flexGrow","media","height","width","cursor","root","margin","spacing","talent","grid","justifyContent","dmText","color","card","backgroundColor","dmCard","dmStar","dmDisabled","Card","props","classes","char","JSON","parse","localStorage","getItem","chara","name","asc","ascension","tall1","talent1","tall2","talent2","tall3","talent3","ascChecked","useState","level","prevLevel","levelState","setLevelState","checked","setChecked","talentState","setTalentState","activeIcon","url","element","inactiveIcon","elementStyles","dmElementStyles","addValues","properties","twoStar","value","values","threeStar","fourStar","fiveStar","common","oneStar","boss","region","onTalentChange","event","talentNum","target","id","substring","length","Number","isNaN","addTalentValues","setItem","stringify","tal","book","talCommon","talBoss","crown","resetTalentValues","onToggleChange","tal1","document","getElementById","tal2","tal3","console","log","IconSwitch","component","style","image","CheckedIconSwitch","className","isDarkMode","onChange","checkedIcon","icon","container","onClick","square","title","textTransform","row","map","control","disabled","onAscensionChange","noValidate","InputProps","inputProps","min","max","InputLabelProps","textAlign","label","defaultValue","type"],"mappings":"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","file":"static/js/3.1782ede8.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nimport MCard from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Star from '@material-ui/icons/Star'\nimport OutlineStar from '@material-ui/icons/StarOutline'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport IconButton from '@material-ui/core/IconButton'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { values } from './Backend/values'\n\nconst useStyles = makeStyles((theme) => ({\n\tcardContent: {\n\t\tflexGrow: 1,\n\t},\n\tmedia: {\n\t\theight: '100px',\n\t\twidth: '100px',\n\t\t'&:hover': {\n\t\t\tcursor: 'pointer'\n\t\t}\n\t},\n\troot: {\n\t\t'& .MuiTextField-root': {\n\t\t  \tmargin: theme.spacing(1),\n\t\t\twidth: '25ch',\n\t\t},\n\t},\n\ttalent: {\n\t\twidth: '100px',\n\t},\n\tgrid: {\n\t\tjustifyContent:'center'\n\t},\n\tdmText: {\n\t\tcolor: 'white',\n\t},\n\tcard: {\n\t\tbackgroundColor: '#f5f5f5',\n\t},\n\tdmCard: {\n\t\tbackgroundColor: '#777777',\n\t},\n\tdmStar: {\n\t\tcolor: 'white',\n\t},\n\tdmDisabled: {\n\t\tcolor: '#cfcfcf',\n\t},\n}));\n\n// Card.js\nexport default function Card(props) {\n\tconst classes = useStyles();\n\n\tconst char = JSON.parse(localStorage.getItem(props.chara.name))\n\n\t// making sure the default values are not null from local storage\n\tconst asc = (char == null || char.ascension == null) ? 0 : char.ascension\n\tconst tall1 = (char == null || char.talent1 == null) ? 1 : char.talent1\n\tconst tall2 = (char == null || char.talent1 == null) ? 1 : char.talent2\n\tconst tall3 = (char == null || char.talent1 == null) ? 1 : char.talent3\n\tconst ascChecked = (asc > 0 ? true : false)\n\n\t// setting the properties of the character's talents\n\tprops.chara.talent1 = tall1;\n\tprops.chara.talent2 = tall2;\n\tprops.chara.talent3 = tall3;\n\n\tconst [ levelState, setLevelState ] = useState({ level: asc, prevLevel: 0 })\n\tconst [ checked, setChecked ] = useState(ascChecked);\n\tconst [ talentState, setTalentState ] = useState({ talent1: tall1, talent2: tall2, talent3: tall3 });\n\n\tconst ascLevels = [ 1, 2, 3, 4, 5, 6];\n\n\tconst activeIcon = props.url + '/Icons/' + props.chara.element + '.png';\n\tconst inactiveIcon = props.url + '/Icons/' + props.chara.element + '-b.png';\n\n\tconst elementStyles = {\n\t\t\"pyro\": \"#f85d5d\",\n\t\t\"cryo\": \"#6ddef3\",\n\t\t\"geo\": \"#f3bd6d\",\n\t\t\"hydro\": \"#6d92f3\",\n\t\t\"electro\": \"#ad6df3\",\n\t\t\"anemo\": \"#6df3bd\",\n\t\t\"dendro\": \"#77f36d\",\n\t\t\"element\": \"#f5f5f5\"\n\t}\n\n\tconst dmElementStyles = {\n\t\t\"dmpyro\": \"#801717\",\n\t\t\"dmcryo\": \"#177380\",\n\t\t\"dmgeo\": \"#804e17\",\n\t\t\"dmhydro\": \"#172c80\",\n\t\t\"dmelectro\": \"#491780\",\n\t\t\"dmanemo\": \"#178067\",\n\t\t\"dmdendro\": \"#17801b\",\n\t\t\"dmelement\": \"#777777\"\n\t}\n\n\tconst onAscensionChange = (level) => {\n\t\taddValues(level);\n\t\tsetLevelState({ level: level, prevLevel: props.chara.ascension})\n\t\tprops.chara.ascension = level;\n\n\t\tlocalStorage.setItem(props.chara.name, JSON.stringify(props.chara))\n\t}\n\n\t// Sets all the ascension values corresponding to ascension level\n\tconst addValues = (level) => {\n\t\tif (level != levelState.prevLevel) {\n\t\t\t// setting ascension gem values\n\t\t\tprops.chara.properties.ascension.twoStar.value = values.ascension.asc.twoStar.value[level]\n\t\t\tprops.chara.properties.ascension.threeStar.value = values.ascension.asc.threeStar.value[level]\n\t\t\tprops.chara.properties.ascension.fourStar.value = values.ascension.asc.fourStar.value[level]\n\t\t\tprops.chara.properties.ascension.fiveStar.value = values.ascension.asc.fiveStar.value[level]\n\n\t\t\t// setting ascension common items values\n\t\t\tprops.chara.properties.common.oneStar.value = values.ascension.common.oneStar.value[level]\n\t\t\tprops.chara.properties.common.twoStar.value = values.ascension.common.twoStar.value[level]\n\t\t\tprops.chara.properties.common.threeStar.value = values.ascension.common.threeStar.value[level]\n\n\t\t\t// setting region and boss values\n\t\t\tprops.chara.properties.boss.value = values.ascension.boss.value[level]\n\t\t\tprops.chara.properties.region.value = values.ascension.region.value[level]\n\t\t}\n\t}\n\n\t// Sets all ascension item values to 0\n\tconst resetValues = () => {\n\t\t// setting ascension gem values\n\t\tprops.chara.properties.ascension.twoStar.value = values.ascension.asc.twoStar.value[0]\n\t\tprops.chara.properties.ascension.threeStar.value = values.ascension.asc.threeStar.value[0]\n\t\tprops.chara.properties.ascension.fourStar.value = values.ascension.asc.fourStar.value[0]\n\t\tprops.chara.properties.ascension.fiveStar.value = values.ascension.asc.fiveStar.value[0]\n\n\t\t// setting ascension common items values\n\t\tprops.chara.properties.common.oneStar.value = values.ascension.common.oneStar.value[0]\n\t\tprops.chara.properties.common.twoStar.value = values.ascension.common.twoStar.value[0]\n\t\tprops.chara.properties.common.threeStar.value = values.ascension.common.threeStar.value[0]\n\n\t\t// setting region and boss values\n\t\tprops.chara.properties.boss.value = values.ascension.boss.value[0]\n\t\tprops.chara.properties.region.value = values.ascension.region.value[0]\n\n\t\t// may need to change to both at 0\n\t\tsetLevelState({ level: 0, prevLevel: levelState.level})\n\t}\n\n\t// when talent input value gets changed\n\tconst onTalentChange = (event) => {\n\t\tconst talentNum = event.target.id.substring(props.chara.name.length);\n\n\t\tlet level = Number(event.target.value);\n\t\t\n\t\tif (isNaN(level))\n\t\t\tlevel = 0;\n\n\t\tif (talentNum == \"talent1\") {\n\t\t\taddTalentValues(\"tal1\", level)\n\t\t\tsetTalentState({ ...talentState, talent1: level})\n\t\t\tprops.chara.talent1 = level;\n\t\t} else if (talentNum == \"talent2\") {\n\t\t\taddTalentValues(\"tal2\", level)\n\t\t\tsetTalentState({ ...talentState, talent2: level})\n\t\t\tprops.chara.talent2 = level;\n\t\t} else if (talentNum == \"talent3\") {\n\t\t\taddTalentValues(\"tal3\", level)\n\t\t\tsetTalentState({ ...talentState, talent3: level})\n\t\t\tprops.chara.talent3 = level;\n\t\t}\n\n\t\t// Need to add this to stop the level from resetting ???\n\t\tprops.chara.ascension = levelState.level;\n\t\tlocalStorage.setItem(props.chara.name, JSON.stringify(props.chara))\n\t}\n\n\t// setting talent values to character props\n\tconst addTalentValues = (tal, level) => {\n\t\t// setting talent book values\n\t\tprops.chara.properties.talent.twoStar.value[tal] = values.talent.book.twoStar.value[level]\n\t\tprops.chara.properties.talent.threeStar.value[tal] = values.talent.book.threeStar.value[level]\n\t\tprops.chara.properties.talent.fourStar.value[tal] = values.talent.book.fourStar.value[level]\n\n\t\t// setting talent common items values\n\t\tprops.chara.properties.talCommon.oneStar.value[tal] = values.talent.common.oneStar.value[level]\n\t\tprops.chara.properties.talCommon.twoStar.value[tal] = values.talent.common.twoStar.value[level]\n\t\tprops.chara.properties.talCommon.threeStar.value[tal] = values.talent.common.threeStar.value[level]\n\n\t\t// setting crown and boss values\n\t\tprops.chara.properties.talBoss.value[tal] = values.talent.boss.value[level]\n\t\tprops.chara.properties.crown.value[tal] = values.talent.crown.value[level]\n\t}\n\n\t// resetting all talent values to base number\n\tconst resetTalentValues = (talent) => {\n\t\t// setting talent book values\n\t\tprops.chara.properties.talent.twoStar.value[talent] = values.talent.book.twoStar.value[1]\n\t\tprops.chara.properties.talent.threeStar.value[talent] = values.talent.book.threeStar.value[1]\n\t\tprops.chara.properties.talent.fourStar.value[talent] = values.talent.book.fourStar.value[1]\n\t\t\n\t\t// setting talent common items values\n\t\tprops.chara.properties.talCommon.oneStar.value[talent] = values.talent.common.oneStar.value[1]\n\t\tprops.chara.properties.talCommon.twoStar.value[talent] = values.talent.common.twoStar.value[1]\n\t\tprops.chara.properties.talCommon.threeStar.value[talent] = values.talent.common.threeStar.value[1]\n\n\t\t// setting crown and boss values\n\t\tprops.chara.properties.talBoss.value[talent] = values.talent.boss.value[1]\n\t\tprops.chara.properties.crown.value[talent] = values.talent.crown.value[1]\n\t\tsetTalentState({ talent1: 1, talent2: 1, talent3: 1 })\n\t}\n\n\t// when the checked status of the toggle button changes\n\tconst onToggleChange = (event) => {\n\t\tsetChecked(!checked)\n\t\tif (checked) {\n\t\t\t// Need to set character values as 0\n\t\t\tresetValues();\n\t\t\tprops.chara.ascension = 0;\n\n\t\t\t// getting the input elements\n\t\t\tconst tal1 = document.getElementById(props.chara.name+\"talent1\")\n\t\t\tconst tal2 = document.getElementById(props.chara.name+\"talent2\")\n\t\t\tconst tal3 = document.getElementById(props.chara.name+\"talent3\")\n\t\t\ttal1.value = 1;\n\t\t\ttal2.value = 1;\n\t\t\ttal3.value = 1;\n\n\t\t\tresetTalentValues(\"tal1\");\n\t\t\tresetTalentValues(\"tal2\");\n\t\t\tresetTalentValues(\"tal3\");\n\n\t\t\t// setting talent state\n\t\t\tsetTalentState({ talent1: 1, talent2: 1, talent3: 1})\n\t\t\tconsole.log(levelState, talentState, props.chara)\n\t\t\tlocalStorage.setItem(props.chara.name, JSON.stringify(props.chara))\n\t\t}\n\t}\n\n\tconst IconSwitch = () => {\n\t\treturn (\n\t\t\t<CardMedia component=\"img\"\n\t\t\t\tstyle={{height: '30px', width: '30px'}}\n\t\t\t\timage={inactiveIcon} />\n\t\t)\n\t}\n\n\tconst CheckedIconSwitch = () => {\n\t\treturn (\n\t\t\t<CardMedia component=\"img\"\n\t\t\t\tstyle={{height: '30px', width: '30px'}}\n\t\t\t\timage={activeIcon} /> \n\t\t)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{/* TERNARY EXPRESSION TO SET UP ELEMENTAL DARK MODE OR LIGHT MODE STYLES\n\t\t\t\tLOGIC IS AS FOLLOWS:\n\t\t\t\t\tif !dm and !checked\n\t\t\t\t\t\tregular light mode grey style\n\t\t\t\t\telse if dm && checked\n\t\t\t\t\t\tdark mode elemental style\n\t\t\t\t\telse if checked\n\t\t\t\t\t\tlight mode elemental style\n\t\t\t\t\telse\n\t\t\t\t\t\tdark mode grey style\n\t\t\t*/}\n\t\t\t<MCard className={props.isDarkMode ? classes.dmCard : classes.card} \n\t\t\t\tstyle={(!props.isDarkMode && !checked) ? { backgroundColor: elementStyles[\"element\"] } :\n\t\t\t\t\t\t(props.isDarkMode && checked) ? { backgroundColor: dmElementStyles[\"dm\" + props.chara.element] } :\n\t\t\t\t\t\t(checked) ? { backgroundColor: elementStyles[props.chara.element] }\t:\n\t\t\t\t\t\t{ backgroundColor: dmElementStyles[\"dmelement\"] }\n\t\t\t\t} \n\t\t\t\tid={props.chara.name}\n\t\t\t>\n\t\t\t\t<Checkbox checked={checked}\n\t\t\t\t\tid={props.chara.name}\n\t\t\t\t\tonChange={onToggleChange}\n\t\t\t\t\tname=\"owned\"\n\t\t\t\t\tcheckedIcon={<CheckedIconSwitch />}\n\t\t\t\t\ticon={<IconSwitch />}\n\t\t\t\t />\n\n\t\t\t\t<Grid container className={classes.grid}>\n\t\t\t\t\t<CardMedia onClick={onToggleChange} square=\"true\" component=\"img\" \n\t\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\t\timage={props.url+'/Characters/' + props.chara.name + '.png'}\n\t\t\t\t\t\ttitle={props.chara.name} />\n\t\t\t\t</Grid>\n\n\t\t\t\t<CardContent className={classes.cardContent}>\n\t\t\t\t\t<h2 className={props.isDarkMode ? classes.dmText : \"\"} style={{textTransform:\"capitalize\"}}>{props.chara.name}</h2>\n\t\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t\t{/* Ascension Stars */}\n\t\t\t\t\t\t<RadioGroup row name=\"ascension\">\n\t\t\t\t\t\t\t{ascLevels.map((level) => (\n\t\t\t\t\t\t\t\t<FormControlLabel key={level} \n\t\t\t\t\t\t\t\t\tvalue={level} \n\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t<IconButton disabled={!checked} \n\t\t\t\t\t\t\t\t\t\t\tstyle={{height: '20px', width: '20px'}} \n\t\t\t\t\t\t\t\t\t\t\tonClick={() => onAscensionChange(level)}>\n\t\t\t\t\t\t\t\t\t\t\t\t{ levelState.level >= level ? \n\t\t\t\t\t\t\t\t\t\t\t\t\t<Star className={props.isDarkMode ? classes.dmStar : \"\"} /> \n\t\t\t\t\t\t\t\t\t\t\t\t\t: <OutlineStar className={props.isDarkMode ? classes.dmStar : \"\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t</FormControlLabel>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t{/* Talents */}\n\t\t\t\t\t<form className={classes.root} noValidate >\n\t\t\t\t\t\t<TextField disabled={!checked} \n\t\t\t\t\t\t\tInputProps={props.isDarkMode ? { classes: {disabled: classes.dmDisabled}, className: classes.dmText, inputProps: { min: 1, max: 10 }} : {inputProps: { min: 1, max: 10 }}} \n\t\t\t\t\t\t\tInputLabelProps={props.isDarkMode ? {style: {color: 'white'}} : {}}\n\t\t\t\t\t\t\tclassName={classes.talent} \n\t\t\t\t\t\t\tonChange={onTalentChange} \n\t\t\t\t\t\t\tstyle={{width: '4rem', textAlign: 'center'}} \n\t\t\t\t\t\t\tid={props.chara.name+\"talent1\"} \n\t\t\t\t\t\t\tlabel=\"Talent 1\" \n\t\t\t\t\t\t\tdefaultValue={talentState.talent1} \n\t\t\t\t\t\t\ttype=\"number\" />\n\n\t\t\t\t\t\t<TextField disabled={!checked} \n\t\t\t\t\t\t\tInputProps={props.isDarkMode ? { classes: {disabled: classes.dmDisabled}, className: classes.dmText, inputProps: { min: 1, max: 10 }} : {inputProps: { min: 1, max: 10 }}} \n\t\t\t\t\t\t\tInputLabelProps={props.isDarkMode ? {style: {color: 'white'}} : {}}\n\t\t\t\t\t\t\tclassName={classes.talent} \n\t\t\t\t\t\t\tonChange={onTalentChange} \n\t\t\t\t\t\t\tstyle={{width: '4rem', textAlign: 'center'}} \n\t\t\t\t\t\t\tid={props.chara.name+\"talent2\"} \n\t\t\t\t\t\t\tlabel=\"Talent 2\" \n\t\t\t\t\t\t\tdefaultValue={talentState.talent2} \n\t\t\t\t\t\t\ttype=\"number\" />\n\n\t\t\t\t\t\t<TextField disabled={!checked} \n\t\t\t\t\t\t\tInputProps={props.isDarkMode ? { classes: {disabled: classes.dmDisabled}, className: classes.dmText, inputProps: { min: 1, max: 10 }} : {inputProps: { min: 1, max: 10 }}} \n\t\t\t\t\t\t\tInputLabelProps={props.isDarkMode ? {style: {color: 'white'}} : {}}\n\t\t\t\t\t\t\tclassName={classes.talent} \n\t\t\t\t\t\t\tonChange={onTalentChange} \n\t\t\t\t\t\t\tstyle={{width: '4rem', textAlign: 'center'}} \n\t\t\t\t\t\t\tid={props.chara.name+\"talent3\"} \n\t\t\t\t\t\t\tlabel=\"Talent 3\" \n\t\t\t\t\t\t\tdefaultValue={talentState.talent3} \n\t\t\t\t\t\t\ttype=\"number\" />\n\t\t\t\t\t</form>\n\t\t\t\t</CardContent>\n\t\t\t</MCard>\n\t\t</div>\n\t)\n}"],"sourceRoot":""}